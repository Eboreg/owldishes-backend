[project]
name = "next-slideshows-backend"
version = "0.1.0"
description = ""
authors = [
    {name = "Robert Huselius",email = "robert@huseli.us"}
]
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "django (>=5.2.7,<6.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "django-extensions (>=4.1,<5.0)",
    "pillow (>=11.3.0,<12.0.0)",
    "opencv-python-headless (>=4.12.0.88,<5.0.0.0)",
    "djangorestframework (>=3.16.1,<4.0.0)",
    "django-nested-admin (>=4.1.4,<5.0.0)",
    "psycopg[binary] (>=3.2.10,<4.0.0)",
]

[tool.poetry]

[tool.poetry.group.dev.dependencies]
flake8 = "^7.3.0"
ipdb = "^0.13.13"
ipython = "^9.6.0"
isort = "^6.1.0"
pylint = "^3.3.9"
pylint-django = "^2.6.1"
django-debug-toolbar = "^6.0.0"
djangorestframework-stubs = "^3.16.4"
django-stubs = "^5.2.6"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project.scripts]
m = "next_slideshows_backend.manage:main"

[tool.pylint.main]
disable = [
    "broad-exception-caught",
    "import-outside-toplevel",
    "invalid-name",
    "invalid-str-returned",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
    "too-many-ancestors",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-return-statements",
    "too-many-statements",
    "unused-argument",
]
ignore = [".venv", "node_modules"]
ignore-patterns = ["^\\.#", ".*\\.pyi", "apps\\.py"]
max-line-length = 119

[tool.isort]
combine_as_imports = true
default_section = "THIRDPARTY"
include_trailing_comma = true
line_length = 79
multi_line_output = 3
lines_after_imports = 2
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
skip = [".venv", "node_modules"]

[tool.mypy]
follow_imports = "skip"
show_error_codes = true
ignore_missing_imports = true
files = "."
check_untyped_defs = true

[[tool.mypy.overrides]]
ignore_errors = true
module = ["*.migrations.*"]
